{
    "configVersion": "1.0.0",
    "lastModified": "2024-12-21T10:00:00.000Z",
    "awsSdkVersion": "@aws-sdk/client-ec2@3.893.0",
    "resourceType": "Subnet",
    "cloudProvider": "AWS",
    "dependencies": [
        "VPC"
    ],
    "serviceMapping": {
        "serviceName": "ec2",
        "packageName": "@aws-sdk/client-ec2",
        "clientClass": "EC2Client"
    },
    "schema": {
        "properties": [
            {
                "name": "cidrBlock",
                "type": "string",
                "description": "The IPv4 network range for the subnet, in CIDR notation",
                "validation": {
                    "pattern": "^(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}$"
                }
            },
            {
                "name": "availabilityZone",
                "type": "string",
                "description": "The Availability Zone for the subnet"
            },
            {
                "name": "mapPublicIpOnLaunch",
                "type": "boolean",
                "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address"
            },
            {
                "name": "tags",
                "type": "object",
                "description": "A map of tags to assign to the resource"
            }
        ],
        "required": [
            "cidrBlock",
            "availabilityZone"
        ]
    },
    "operations": {
        "create": [
            {
                "command": "CreateSubnetCommand",
                "description": "Create the subnet in the specified VPC (Note: Use subnet.resource.ts for tag support)",
                "parameters": {
                    "VpcId": "{{context.resolvedReferences.vpc.cloudResourceId}}",
                    "CidrBlock": "{{config.cidrBlock}}",
                    "AvailabilityZone": "{{config.availabilityZone}}"
                },
                "outputMapping": {
                    "subnetId": "Subnet.SubnetId",
                    "availabilityZone": "Subnet.AvailabilityZone",
                    "cidrBlock": "Subnet.CidrBlock",
                    "state": "Subnet.State",
                    "vpcId": "Subnet.VpcId"
                }
            },
            {
                "command": "ModifySubnetAttributeCommand",
                "description": "Enable public IP assignment if specified",
                "condition": "{{config.mapPublicIpOnLaunch}}",
                "parameters": {
                    "SubnetId": "{{outputs.subnetId}}",
                    "MapPublicIpOnLaunch": {
                        "Value": true
                    }
                }
            }
        ],
        "read": {
            "command": "DescribeSubnetsCommand",
            "description": "Retrieve subnet information",
            "parameters": {
                "SubnetIds": [
                    "{{resourceId}}"
                ]
            },
            "outputMapping": {
                "subnetId": "Subnets.0.SubnetId",
                "vpcId": "Subnets.0.VpcId",
                "cidrBlock": "Subnets.0.CidrBlock",
                "availabilityZone": "Subnets.0.AvailabilityZone",
                "state": "Subnets.0.State",
                "mapPublicIpOnLaunch": "Subnets.0.MapPublicIpOnLaunch"
            }
        },
        "delete": {
            "command": "DeleteSubnetCommand",
            "description": "Delete the subnet",
            "parameters": {
                "SubnetId": "{{resourceId}}"
            }
        }
    },
    "validation": {
        "required": [
            "cidrBlock",
            "availabilityZone"
        ],
        "custom": [
            {
                "field": "cidrBlock",
                "rule": "cidr",
                "message": "Invalid CIDR block format. Must be in format x.x.x.x/x and within VPC CIDR range",
                "params": {
                    "allowPrivate": true,
                    "allowPublic": false
                }
            },
            {
                "field": "availabilityZone",
                "rule": "availabilityZone",
                "message": "Invalid availability zone for region {{context.region}}",
                "params": {
                    "region": "{{context.region}}"
                }
            },
            {
                "field": "vpcReference",
                "rule": "reference",
                "message": "Subnet requires a valid VPC reference",
                "params": {
                    "referenceType": "VPC"
                }
            }
        ]
    },
    "errorHandling": {
        "InvalidSubnetID.NotFound": "Subnet {{resourceId}} not found in region {{context.region}}",
        "InvalidSubnetID.Malformed": "Invalid Subnet ID format: {{resourceId}}",
        "InvalidSubnet.Range": "The CIDR '{{config.cidrBlock}}' is invalid or conflicts with existing subnets in VPC",
        "InvalidSubnet.Conflict": "The CIDR '{{config.cidrBlock}}' conflicts with existing subnet CIDR blocks",
        "SubnetLimitExceeded": "Subnet limit exceeded in VPC {{context.resolvedReferences.vpc.cloudResourceId}}",
        "InvalidVpcID.NotFound": "VPC {{context.resolvedReferences.vpc.cloudResourceId}} not found for subnet creation",
        "InvalidAvailabilityZone.NotFound": "Availability Zone '{{config.availabilityZone}}' not found in region {{context.region}}",
        "DependencyViolation": "Cannot delete subnet {{resourceId}} - it has dependent resources (instances, network interfaces, etc.)",
        "UnauthorizedOperation": "Insufficient permissions to perform subnet operations in region {{context.region}}"
    },
    "relationships": [
        {
            "key": "subnet.vpc",
            "from": "Subnet",
            "to": "VPC",
            "kind": "depends_on",
            "cardinality": "N:1",
            "required": true,
            "description": "Subnet must belong to exactly one VPC",
            "storage": {
                "collection": "edges"
            },
            "policies": {
                "delete": "restrict"
            }
        }
    ],
    "resourceForm": [
        {
            "category": "Basic Information",
            "fields": [
                {
                    "name": "cidrBlock",
                    "label": "CIDR Block",
                    "type": "string",
                    "fieldType": "text-input",
                    "description": "The IPv4 network range for the subnet, in CIDR notation",
                    "validation": {
                        "pattern": "/^(?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d))\\.){3}(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\/(3[0-2]|[12]\\d|[0-9]))$/",
                        "required": true
                    },
                    "defaultValue": "10.0.1.0/24"
                },
                {
                    "name": "availabilityZone",
                    "label": "Availability Zone",
                    "type": "string",
                    "fieldType": "text-input",
                    "description": "The Availability Zone for the subnet",
                    "validation": {
                        "required": true
                    },
                    "defaultValue": "us-east-1a"
                },
                {
                    "name": "mapPublicIpOnLaunch",
                    "label": "Map Public IP on Launch",
                    "type": "boolean",
                    "fieldType": "checkbox",
                    "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address",
                    "validation": {},
                    "defaultValue": false
                }
            ]
        },
        {
            "category": "Array of Tags",
            "fields": [
                {
                    "name": "tags",
                    "label": "Tags",
                    "type": "array",
                    "fieldType": "tags",
                    "description": "A map of tags to assign to the resource",
                    "validation": {
                        "required": true,
                        "minLength": 1
                    },
                    "item": {
                        "type": "object",
                        "fields": [
                            {
                                "name": "key",
                                "label": "Key",
                                "type": "string",
                                "validation": {
                                    "required": true
                                }
                            },
                            {
                                "name": "value",
                                "label": "Value",
                                "type": "string",
                                "validation": {
                                    "required": true
                                }
                            }
                        ]
                    }
                }
            ]
        }
    ]
}
